const cron = require("node-cron");
// const UpcomingSubscriptionEmailSend = require("./subscription/upcomingSubscriptionEmail");
// const ExpireSubscription = require("./subscription/expireSubscription");
// const AutoRenewCharge = require("./subscription/upcomingAutoRenewCharge");
// const SubscriptionSummary = require("./subscription/subscriptionSummary");
const AutoGeneratedCode = require("./autoValidatdion/autoGeneratedCode");
// const ExpireSubscription = require("./subscription/expireSubscription");
// const AutoRenewCharge = require("./subscription/upcomingAutoRenewCharge");
const SendExtendReminder = require("./parking/SendExtendReminder");
// const places = require("../models/places");
// const SendExtendReminder = require("./parking/SendExtendReminder");
const SendValidationReminder = require("./parking/sendValidationReminder");
const DailyReportSend = require("./reports/dailyReport");
const CapturePaymentPayNowValidationLaterFLow = require("./parking/capturePaymentPayNowValidationFlow");
const DashboardStatistics = require("./dashboardStatistics/dashboardStatistics");
const ExecuteEvent = require("./generalEvent/executeEvent");
const RenewAllCustomSubscriptions = require("./subscription/customSubscription/renewSubscription");
const CustomSubscriptionEmailConfirmationSend = require("./subscription/customSubscription/sendEmailConfirmation");
const CustomSubscriptionSMSConfirmationSend = require("./subscription/customSubscription/sendSMSConfirmation");
const CustomSubscriptionSlackUpdate = require("./subscription/customSubscription/updateSlack");
const DailyRefundReportSend = require("./reports/dailyRefundReport");
const UpdateACHSubscriptions = require("./subscription/updateACHSubscription");
// const places = require("../models/places");

// const getPlaceData = async () => {
//   try {
//     const placeData = await places.find({}, "timeZoneId _id");
//     return placeData;
//   } catch (err) {
//     console.error("Error fetching place data:", err);
//     return [];
//   }
// };

/* const scheduleSubscriptionSummaryJob = async () => {
  const placesData = await getPlaceData();
  if (placesData) {
    placesData.forEach((place) => {
      const timeZone = place.timeZoneId;
      const placeId = place._id;
      cron.schedule(
        `59 23 * * *`,
        async () => {
          const subscriptionSummary = await SubscriptionSummary(placeId);
          console.log(
            `Cron triggered for place ${placeId}:`,
            subscriptionSummary.message
          );
        },
        {
          scheduled: true,
          timezone: timeZone,
        }
      );
    });
  }
}; */

module.exports = () => {
  /* ACTIVE CRON JOBS (START) */

  cron.schedule("* * * * *", async () => {
    const sendExtendReminder = await SendExtendReminder();
    console.log("Cron triggered :", sendExtendReminder.message);
  });

  cron.schedule("*/15 * * * *", async () => {
    const autoGeneratedCode = await AutoGeneratedCode();
    console.log("Cron triggered : Auto Generate Code tirigger");
  });

  cron.schedule("* * * * *", async () => {
    const sendValidationReminder = await SendValidationReminder();
    console.log("Cron triggered :", sendValidationReminder.message);
  });

  cron.schedule("*/5 * * * *", async () => {
    const capturePayment = await CapturePaymentPayNowValidationLaterFLow();
    console.log("Cron triggered :", capturePayment.message);
  });

  cron.schedule(
    "0 9 * * *",
    async () => {
      try {
        const sendDailyReport = await DailyReportSend();
        console.log("Cron triggered:", sendDailyReport.message);
      } catch (error) {
        console.error("Error sending daily report:", error);
      }
    },
    { scheduled: true, timezone: "" }
  );

  cron.schedule(
    "0 10 * * *",
    async () => {
      try {
        const sendDailyRefundReport = await DailyRefundReportSend();
        console.log("Cron triggered:", sendDailyRefundReport.message);
      } catch (error) {
        console.error("Error sending daily  refund report:", error);
      }
    },
    { scheduled: true, timezone: "" }
  );

  /* cron.schedule("* * * * *", async () => {
    const event = await ExecuteEvent();
    console.log("Cron triggered :", event.message);
  }); */

  cron.schedule("*/30 * * * *", async () => {
    const stats = await DashboardStatistics();
    console.log("Cron triggered : for stats");
  });

  cron.schedule("0 6 * * *", async () => {
    const updateACHSubscription = await UpdateACHSubscriptions();
    console.log("Cron triggered :", updateACHSubscription.message);
  });

  /* cron.schedule("* 9 * * *", async () => {
    const renewCustomSubscriptions = await RenewAllCustomSubscriptions();
    console.log(
      "Cron triggered : for renewCustomSubscriptions",
      renewCustomSubscriptions
    );

    await Promise.all([
      CustomSubscriptionEmailConfirmationSend(),
      CustomSubscriptionSMSConfirmationSend(),
      CustomSubscriptionSlackUpdate(),
    ]);
  }); */

  /* ACTIVE CRON JOBS (END) */

  // cron.schedule("0 8 * * *", async () => {
  //   const upcomingSubEmail = await UpcomingSubscriptionEmailSend();
  //   console.log("Cron triggered :", upcomingSubEmail.message);
  // });
  // cron.schedule("59 23 * * *", async () => {
  //   const expireSubscription = await ExpireSubscription();
  //   console.log("Cron triggered :", expireSubscription.message);
  // });

  // cron.schedule("0 8 * * *", async () => {
  //   const autoRenewCharge = await AutoRenewCharge();
  //   console.log("Cron triggered :", autoRenewCharge.message);
  // });

  // cron.schedule("0 6 * * *", async () => {
  //   const sendRenewalReminder = await RenewalReminderEmailSend();
  //   console.log("Cron triggered : for sendRenewalReminder");
  // });

  // cron.schedule("0 * * * *", async () => {
  //   const customSubscriptionEmailConfirmationSend =
  //     await CustomSubscriptionEmailConfirmationSend();
  //   console.log(
  //     "Cron triggered : for customSubscriptionEmailConfirmationSend",
  //     customSubscriptionEmailConfirmationSend
  //   );
  // });
  // cron.schedule("0 * * * *", async () => {
  //   const customSubscriptionSMSConfirmationSend =
  //     await CustomSubscriptionSMSConfirmationSend();
  //   console.log(
  //     "Cron triggered : for customSubscriptionSMSConfirmationSend",
  //     customSubscriptionSMSConfirmationSend
  //   );
  // });
  // cron.schedule("0 * * * *", async () => {
  //   const customSubscriptionUpdateSlack =
  //     await CustomSubscriptionSlackUpdate();
  //   console.log(
  //     "Cron triggered : for customSubscriptionUpdateSlack",
  //     customSubscriptionUpdateSlack
  //   );
  // });
};

// * * * * *      every minute
// 0 * * * *      every hour
// 59 23 * * *    every night at 11:59 PM
// 0 8 * * *      every morning at 08:00 AM
// 0 6 * * *     every morning at 06:00 AM
