const { Schema, model } = require("mongoose");

const SubscriptionSchema = new Schema({
  createdFrom: { type: String, default: "DASHBOARD" },
  isCharged: { type: Boolean, default: false },
  isDirectChargeSubscription: { type: Boolean, default: false },
  customerId: { type: Schema.Types.ObjectId, ref: "customers" },
  placeId: { type: Schema.Types.ObjectId, ref: "places" },
  rateId: { type: Schema.Types.ObjectId, ref: "rates" },
  brandId: { type: Schema.Types.ObjectId, ref: "brands" },
  receiptId: { type: Schema.Types.ObjectId, ref: "paymentReceipts" },
  shortlyId: { type: String },
  receiptNumber: { type: String },
  receiptURL: { type: String },
  invoiceURL: { type: String },
  subscriptionNumber: { type: String },
  firstStartDate: { type: Date },
  subscriptionCancelDate: { type: Date },
  startDate: { type: Date },
  endDate: { type: Date },
  message: { type: String },
  companyName: { type: String },
  brandLogo: { type: String },
  subscriptionStatus: { type: String },
  licensePlate: [
    {
      licensePlateNumber: { type: String },
      assignName: { type: String },
      price: { type: Number },
      status: { type: Number, default: 10 },
      externalKey: { type: String },
      ballparkValidateDate: { type: Date },
    },
  ],
  licensePlateGetUpdated: { type: Boolean, default: false },
  isSubscriptionPaused: { type: Boolean, default: false },
  licensePlateUpdateMessage: { type: String },
  reasonForDeclineMessage: { type: String },
  baseRate: { type: Number, required: true, default: 0 },
  tax: { type: Number, required: true, default: 0 },
  taxPercentage: { type: Number, required: true, default: 0 },
  cityTax: { type: Number, required: true, default: 0 },
  cityTaxPercentage: { type: Number, required: true, default: 0 },
  countyTax: { type: Number, required: true, default: 0 },
  countyTaxPercentage: { type: Number, required: true, default: 0 },
  serviceFee: { type: Number, required: true, default: 0 },
  ownerPayout: { type: Number, required: true, default: 0 },
      spotsyncRevenue: { type: Number, required: true, default: 0 },
  applicationFee: { type: Number, required: true, default: 0 },
  paymentGatewayFee: { type: Number, required: true, default: 0 },
  renewalCount: { type: Number, default: 0 },
  totalAmount: { type: Number, default: 0 },
  isMonthly: { type: Boolean, default: false },
  firstMonthBaseRate: { type: Number },
  firstMonthServiceFee: { type: Number },
  firstMonthTax: { type: Number },
  firstMonthCityTax: { type: Number },
  firstMonthCountyTax: { type: Number },
  firstMonthTotalAmount: { type: Number },
  firstMonthOwnerPayout: { type: Number },
      firstMonthSpotsyncRevenue: { type: Number },
  firstMonthApplicationFee: { type: Number },
  firstMonthPaymentGatewayFee: { type: Number },
  isReminderEmailSend: { type: Boolean, default: false },
  isAutoRenew: { type: Boolean, default: false },
  isApplyTax: { type: Boolean, default: false },
  isApplyServiceFee: { type: Boolean, default: false },
  isApplyTaxOnServiceFee: { type: Boolean, default: false },
  paymentGatewayFeePayBy: { type: String },
  isCustomSubscription: { type: Boolean, default: false },
  isSubscriptionActive: { type: Boolean, default: false },
  paymentId: { type: Schema.Types.ObjectId, ref: "payments" },
  defaultPaymentMethodId: { type: String },
  paymentMethodType: { type: String },
  subscriptionDurationInDays: { type: Number },
  // Cash payment specific fields
  isCashPayment: { type: Boolean, default: false },
  cashPaymentCollectedBy: { type: String }, // Name of person who collected cash
  cashPaymentCollectedAt: { type: Date }, // When cash was collected
  cashPaymentReceiptNumber: { type: String }, // Receipt number for cash payment
  status: { type: Number, default: 10 },
  createdAt: { type: Date, default: new Date() },
  updatedAt: { type: Date, default: new Date() },

  isEmailSend: { type: Boolean, default: false },
  isSMSSend: { type: Boolean, default: false },
  isBallparkUpdate: { type: Boolean, default: false },
  isSlackUpdate: { type: Boolean, default: false },
  resumeDate: { type: Date },
});

module.exports = Subscriptions = model("subscriptions", SubscriptionSchema);
