const mongoose = require("mongoose");
const Schema = mongoose.Schema;

const ReceiptSchema = new Schema(
  {
    toEmail: { type: String },
    serialNumber: { type: String },
    transientNumber: { type: String },
    subscriptionNumber: { type: String },
    type: { type: String },
    subscriptionType: { type: String },
    transactionId: { type: String },
    subscriptionId: { type: Schema.Types.ObjectId, ref: "subscriptions" },
    reservationId: { type: Schema.Types.ObjectId, ref: "reservations" },
    brandLogo: { type: String },
    startDate: { type: String },
    endDate: { type: String },
    paymentDate: { type: String },
    paymentData: { type: String },
    tax: { type: Number },
    cityTax: { type: Number, default: 0 },
    countyTax: { type: Number, default: 0 },
    paymentGatewayFee: { type: Number },
    serviceFee: { type: Number },
    updatedServiceFee: { type: Number },
    total: { type: Number },
    baseRate: { type: Number },
    withoutDiscountBaseRate: { type: Number },
    brandName: { type: String },
    brandAddress: { type: String },
    brandMobile: { type: String },
    helpText: { type: String },
    companyName: { type: String },
    placeAddress: { type: String },
    parkerName: { type: String },
    parkerMobile: { type: String },
    parkerEmail: { type: String },
    autoRenew: { type: Boolean },
    isValidationApplied: { type: Boolean },
    validationCode: { type: String },
    discountPercentage: { type: String },
    nextRenewalDate: { type: String },
    renewalDate: { type: String },
    renewalInHours: { type: String },
    parkerDashboardLink: { type: String },
    discount: { type: Number },
    receiptColor: { type: String },
    spaceNumber: { type: String },
    licensePlates: [],
    noOfPasses: { type: Number, default: 1 },
    email: { type: String, default: "" },
    isPass: { type: Boolean, default: false },
    lastName: { type: String, default: "" },
  },
  { timestamps: true }
);

module.exports = Receipt = mongoose.model("receipts", ReceiptSchema);
